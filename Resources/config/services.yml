services:
    agit.setting:
        class: Agit\SettingBundle\Service\SettingService
        arguments: [@agit.setting.loader, @doctrine.orm.entity_manager]


    # listening for settings to be registered
    agit.setting.register:
        private: true
        class: CombinedListener
        factory_service:  agit.pluggable.combined.listener.factory
        factory_method:   create
        arguments: [ agit.setting, \Agit\SettingBundle\Setting\AbstractSetting, [ AgitSettingBundle:Setting ], true, false ]
        tags: [{ name: kernel.event_listener, event: agit.pluggable, method: onRegistration }]


    # registering our own settings
    agit.setting.extensions:
        private: true
        class: CombinedPluginListener
        factory_service:  agit.plugin.combined.listener.factory
        factory_method:   create
        arguments: [ AgitSettingBundle:Setting ]
        tags: [{ name: kernel.event_listener, event: agit.setting, method: onRegistration }]


    # retrieving registered settings
    agit.setting.loader:
        private: true
        class: ObjectLoader
        factory_service:  agit.plugin.object.loader.factory
        factory_method:   create
        arguments: [ agit.setting ]